import '../models/sales.dart';
import '../models/financial.dart';
import '../models/customer.dart';
import '../models/worker.dart';

class MockSalesService {
  // Ventas Mock
  static List<Sale> getMockSales() {
    return [
      Sale(
        id: 's1',
        orderId: 'ord001',
        customerId: 'c1',
        customerName: 'María González',
        tpvId: 'tpv1',
        tpvName: 'TPV Principal - Tienda Centro',
        sellerId: 'w1',
        sellerName: 'Carlos Mendoza',
        saleDate: DateTime.now().subtract(const Duration(hours: 2)),
        paymentMethod: 'Efectivo',
        subtotal: 15.75,
        discount: 1.58,
        tax: 2.27,
        total: 16.44,
        status: 'completada',
        items: [
          SaleItem(
            id: 'si1',
            saleId: 's1',
            productId: '1',
            variantId: 'v1',
            productName: 'Coca Cola',
            variantName: 'Coca Cola 350ml',
            quantity: 3,
            unitPrice: 2.50,
            totalPrice: 7.50,
          ),
          SaleItem(
            id: 'si2',
            saleId: 's1',
            productId: '2',
            variantId: 'v4',
            productName: 'Pan Integral',
            variantName: 'Pan Integral 680g',
            quantity: 2,
            unitPrice: 3.25,
            totalPrice: 6.50,
          ),
        ],
      ),
      Sale(
        id: 's2',
        orderId: 'ord002',
        customerId: 'c2',
        customerName: 'Juan Pérez',
        tpvId: 'tpv2',
        tpvName: 'TPV Secundario - Tienda Norte',
        sellerId: 'w2',
        sellerName: 'Ana López',
        saleDate: DateTime.now().subtract(const Duration(hours: 4)),
        paymentMethod: 'Tarjeta',
        subtotal: 28.50,
        discount: 0.00,
        tax: 4.56,
        total: 33.06,
        status: 'completada',
        items: [
          SaleItem(
            id: 'si3',
            saleId: 's2',
            productId: '3',
            variantId: 'v5',
            productName: 'Leche Entera',
            variantName: 'Leche Entera 1L',
            quantity: 4,
            unitPrice: 2.80,
            totalPrice: 11.20,
          ),
          SaleItem(
            id: 'si4',
            saleId: 's2',
            productId: '4',
            variantId: 'v7',
            productName: 'Arroz Blanco',
            variantName: 'Arroz Blanco 1kg',
            quantity: 2,
            unitPrice: 4.75,
            totalPrice: 9.50,
          ),
        ],
      ),
    ];
  }

  // TPVs Mock
  static List<TPV> getMockTPVs() {
    return [
      TPV(
        id: 'tpv1',
        name: 'TPV Principal',
        code: 'TPV-001',
        storeId: 'store1',
        storeName: 'Tienda Centro',
        location: 'Planta Baja - Caja 1',
        status: 'activo',
        lastActivity: DateTime.now().subtract(const Duration(minutes: 15)),
        assignedUserId: 'w1',
        assignedUserName: 'Carlos Mendoza',
      ),
      TPV(
        id: 'tpv2',
        name: 'TPV Secundario',
        code: 'TPV-002',
        storeId: 'store1',
        storeName: 'Tienda Centro',
        location: 'Planta Baja - Caja 2',
        status: 'activo',
        lastActivity: DateTime.now().subtract(const Duration(minutes: 30)),
        assignedUserId: 'w2',
        assignedUserName: 'Ana López',
      ),
      TPV(
        id: 'tpv3',
        name: 'TPV Norte',
        code: 'TPV-003',
        storeId: 'store2',
        storeName: 'Tienda Norte',
        location: 'Entrada Principal',
        status: 'mantenimiento',
        lastActivity: DateTime.now().subtract(const Duration(hours: 8)),
      ),
    ];
  }

  // Gastos Mock
  static List<Expense> getMockExpenses() {
    return [
      Expense(
        id: 'exp1',
        description: 'Compra de material de oficina',
        category: 'Suministros',
        costCenter: 'cc1',
        amount: 150.00,
        expenseDate: DateTime.now().subtract(const Duration(days: 1)),
        paymentMethod: 'Transferencia',
        status: 'aprobado',
        userId: 'w1',
        userName: 'Carlos Mendoza',
        createdAt: DateTime.now().subtract(const Duration(days: 1)),
      ),
      Expense(
        id: 'exp2',
        description: 'Mantenimiento de equipos TPV',
        category: 'Mantenimiento',
        costCenter: 'cc2',
        amount: 450.00,
        expenseDate: DateTime.now().subtract(const Duration(days: 3)),
        paymentMethod: 'Efectivo',
        status: 'pagado',
        userId: 'w3',
        userName: 'Roberto Silva',
        approvedBy: 'admin1',
        createdAt: DateTime.now().subtract(const Duration(days: 3)),
      ),
      Expense(
        id: 'exp3',
        description: 'Publicidad en redes sociales',
        category: 'Marketing',
        costCenter: 'cc3',
        amount: 800.00,
        expenseDate: DateTime.now().subtract(const Duration(days: 5)),
        paymentMethod: 'Tarjeta',
        status: 'pendiente',
        userId: 'w4',
        userName: 'Laura Martínez',
        createdAt: DateTime.now().subtract(const Duration(days: 5)),
      ),
    ];
  }

  // Centros de Costo Mock
  static List<CostCenter> getMockCostCenters() {
    return [
      CostCenter(
        id: 'cc1',
        name: 'Administración',
        code: 'ADM-001',
        description: 'Gastos administrativos generales',
        type: 'administrativo',
        budget: 5000.00,
        spent: 2150.00,
      ),
      CostCenter(
        id: 'cc2',
        name: 'Operaciones',
        code: 'OPE-001',
        description: 'Gastos operacionales de tienda',
        type: 'operacional',
        budget: 8000.00,
        spent: 3450.00,
      ),
      CostCenter(
        id: 'cc3',
        name: 'Marketing',
        code: 'MKT-001',
        description: 'Gastos de marketing y publicidad',
        type: 'marketing',
        budget: 3000.00,
        spent: 1800.00,
      ),
      CostCenter(
        id: 'cc4',
        name: 'Ventas',
        code: 'VEN-001',
        description: 'Gastos del equipo de ventas',
        type: 'ventas',
        budget: 6000.00,
        spent: 2800.00,
      ),
    ];
  }

  // Clientes Mock
  static List<Customer> getMockCustomers() {
    return [
      Customer(
        id: 'c1',
        name: 'María González',
        email: 'maria.gonzalez@email.com',
        phone: '+52 55 1234 5678',
        address: 'Av. Reforma 123, Col. Centro',
        city: 'Ciudad de México',
        country: 'México',
        segment: 'premium',
        loyaltyPoints: 1250,
        loyaltyLevel: 'oro',
        totalPurchases: 2850.75,
        totalOrders: 45,
        lastPurchase: DateTime.now().subtract(const Duration(hours: 2)),
        registrationDate: DateTime.now().subtract(const Duration(days: 180)),
        preferences: ['Bebidas', 'Productos orgánicos'],
      ),
      Customer(
        id: 'c2',
        name: 'Juan Pérez',
        email: 'juan.perez@email.com',
        phone: '+52 55 9876 5432',
        address: 'Calle Morelos 456, Col. Norte',
        city: 'Guadalajara',
        country: 'México',
        segment: 'regular',
        loyaltyPoints: 650,
        loyaltyLevel: 'plata',
        totalPurchases: 1420.30,
        totalOrders: 28,
        lastPurchase: DateTime.now().subtract(const Duration(hours: 4)),
        registrationDate: DateTime.now().subtract(const Duration(days: 120)),
        preferences: ['Lácteos', 'Granos'],
      ),
      Customer(
        id: 'c3',
        name: 'Ana Rodríguez',
        email: 'ana.rodriguez@email.com',
        phone: '+52 55 5555 1234',
        address: 'Blvd. Insurgentes 789',
        city: 'Monterrey',
        country: 'México',
        segment: 'nuevo',
        loyaltyPoints: 150,
        loyaltyLevel: 'bronce',
        totalPurchases: 285.50,
        totalOrders: 8,
        lastPurchase: DateTime.now().subtract(const Duration(days: 2)),
        registrationDate: DateTime.now().subtract(const Duration(days: 30)),
        preferences: ['Panadería'],
      ),
    ];
  }

  // Trabajadores Mock
  static List<Worker> getMockWorkers() {
    return [
      Worker(
        id: 'w1',
        name: 'Carlos Mendoza',
        email: 'carlos.mendoza@ventiq.com',
        phone: '+52 55 1111 2222',
        position: 'Vendedor Senior',
        department: 'Ventas',
        role: 'seller',
        permissions: ['sales_read', 'sales_create', 'inventory_read'],
        storeId: 'store1',
        storeName: 'Tienda Centro',
        hireDate: DateTime.now().subtract(const Duration(days: 365)),
        lastLogin: DateTime.now().subtract(const Duration(minutes: 30)),
        salary: 15000.00,
        workSchedule: 'Lunes a Viernes 9:00-18:00',
      ),
      Worker(
        id: 'w2',
        name: 'Ana López',
        email: 'ana.lopez@ventiq.com',
        phone: '+52 55 3333 4444',
        position: 'Cajera',
        department: 'Ventas',
        role: 'seller',
        permissions: ['sales_read', 'sales_create'],
        storeId: 'store1',
        storeName: 'Tienda Centro',
        hireDate: DateTime.now().subtract(const Duration(days: 180)),
        lastLogin: DateTime.now().subtract(const Duration(hours: 1)),
        salary: 12000.00,
        workSchedule: 'Lunes a Sábado 8:00-16:00',
      ),
      Worker(
        id: 'w3',
        name: 'Roberto Silva',
        email: 'roberto.silva@ventiq.com',
        phone: '+52 55 5555 6666',
        position: 'Supervisor de Almacén',
        department: 'Logística',
        role: 'warehouse',
        permissions: ['inventory_read', 'inventory_create', 'inventory_update', 'warehouse_manage'],
        storeId: 'store1',
        storeName: 'Tienda Centro',
        hireDate: DateTime.now().subtract(const Duration(days: 500)),
        lastLogin: DateTime.now().subtract(const Duration(hours: 3)),
        salary: 18000.00,
        workSchedule: 'Lunes a Viernes 7:00-15:00',
      ),
      Worker(
        id: 'w4',
        name: 'Laura Martínez',
        email: 'laura.martinez@ventiq.com',
        phone: '+52 55 7777 8888',
        position: 'Gerente de Tienda',
        department: 'Administración',
        role: 'manager',
        permissions: ['all_read', 'all_create', 'all_update', 'reports_manage', 'staff_manage'],
        storeId: 'store1',
        storeName: 'Tienda Centro',
        hireDate: DateTime.now().subtract(const Duration(days: 800)),
        lastLogin: DateTime.now().subtract(const Duration(minutes: 15)),
        salary: 25000.00,
        workSchedule: 'Lunes a Sábado 9:00-19:00',
      ),
    ];
  }
}
